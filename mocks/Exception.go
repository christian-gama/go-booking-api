// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	exception "github.com/christian-gama/go-booking-api/internal/shared/app/exception"
	mock "github.com/stretchr/testify/mock"
)

// Exception is an autogenerated mock type for the Exception type
type Exception struct {
	mock.Mock
}

// BadRequest provides a mock function with given fields: message
func (_m *Exception) BadRequest(message string) *exception.Error {
	ret := _m.Called(message)

	var r0 *exception.Error
	if rf, ok := ret.Get(0).(func(string) *exception.Error); ok {
		r0 = rf(message)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*exception.Error)
		}
	}

	return r0
}

type mockConstructorTestingTNewException interface {
	mock.TestingT
	Cleanup(func())
}

// NewException creates a new instance of Exception. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewException(t mockConstructorTestingTNewException) *Exception {
	mock := &Exception{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
